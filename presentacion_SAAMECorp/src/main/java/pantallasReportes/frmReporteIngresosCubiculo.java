/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pantallasReportes;

import dto.CubiculoDTO;
import dto.ReporteIngresosCubiculoDTO;
import excepciones.CoordinadorException;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import presentacion.control.CoordinadorAplicacion;
import presentacion.control.CoordinadorNegocio;
import presentacion.utilerias.DocumentoPDFUtil;

/**
 *
 * @author erika
 */
public class frmReporteIngresosCubiculo extends javax.swing.JFrame {
    /**
     * Lista de cubiculos
     */
    private List<CubiculoDTO> listaCubiculos = new ArrayList<>();
    /**
     * Coordinador para la logica de negocio de la aplicacion
     */
    private final CoordinadorNegocio controlNegocio = CoordinadorNegocio.getInstance();
    /**
     * Coordinador del flujo de pantallas de la aplicación.
     */
    private final CoordinadorAplicacion flujoPantallas = CoordinadorAplicacion.getInstance();
    private final JFrame frmPadre;
    
    /**
     *  Constructor que inicializa los componentes de la clase.
     * @param frmPadre
     */
    public frmReporteIngresosCubiculo(JFrame frmPadre) {
        this.frmPadre = frmPadre;
        initComponents();
        setLocationRelativeTo(null);
        mostrarCubiculos();
        
        btnGenerarReporte.addActionListener((ActionEvent evt) -> {
            CubiculoDTO cubiculoSeleccionado = (CubiculoDTO) cBoxCubiculo.getSelectedItem();
            if (cubiculoSeleccionado != null) {
                try {
                    ReporteIngresosCubiculoDTO dto = controlNegocio.generarReporteIngresosPorCubiculo(cubiculoSeleccionado);
                    mostrarDatosEnTabla(dto);
                } catch (CoordinadorException ex) {
                    Logger.getLogger(frmReporteIngresosCubiculo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
        jTable1.setModel(new DefaultTableModel(
            new Object[][] {}, // sin filas
            new String[] {
                "Cubículo", "Ingresos", "Citas Pagadas", "Citas Pendientes"
            }
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });

    }
    
   private void mostrarDatosEnTabla(ReporteIngresosCubiculoDTO dto) {
        DefaultTableModel model = new DefaultTableModel(
            new Object[][] {
                {
                    dto.getNombreCubiculo(),
                    dto.getTotalIngresos(),
                    dto.getCitasConPago(),
                    dto.getCitasPendientes()
                }
            },
            new String[] {
                "Cubículo", "Ingresos", "Citas Pagadas", "Citas Pendientes"
            }
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Todas las celdas son no editables
            }
        };

        jTable1.setModel(model);
    }

    
    private void mostrarCubiculos() {
        try {
            listaCubiculos = controlNegocio.obtenerCubiculos();

            if (listaCubiculos.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No hay cubículos registrados.", "Aviso", JOptionPane.WARNING_MESSAGE);
                return;
            }

            cBoxCubiculo.removeAllItems();

            for (CubiculoDTO cubiculo : listaCubiculos) {
                cBoxCubiculo.addItem(cubiculo); 
            }

        } catch (CoordinadorException ex) {
            JOptionPane.showMessageDialog(this, "Error al obtener los cubículos: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cBoxCubiculo = new javax.swing.JComboBox<>();
        btnGenerarReporte = new javax.swing.JButton();
        btnDescargarPDF = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(221, 212, 240));
        jPanel1.setPreferredSize(new java.awt.Dimension(1100, 680));

        lblTitulo.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        lblTitulo.setText("Reporte Ingresos por Cubiculo");

        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8-back-30.png"))); // NOI18N
        btnRegresar.setBorderPainted(false);
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.setFocusable(false);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnGenerarReporte.setBackground(new java.awt.Color(0, 0, 0));
        btnGenerarReporte.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnGenerarReporte.setForeground(new java.awt.Color(255, 255, 255));
        btnGenerarReporte.setText("Generar Reporte");

        btnDescargarPDF.setBackground(new java.awt.Color(0, 0, 0));
        btnDescargarPDF.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnDescargarPDF.setForeground(new java.awt.Color(255, 255, 255));
        btnDescargarPDF.setText("DescargarPDF");
        btnDescargarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescargarPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addComponent(btnRegresar)
                .addGap(75, 75, 75)
                .addComponent(lblTitulo)
                .addContainerGap(190, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDescargarPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 761, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(134, 134, 134))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cBoxCubiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGenerarReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTitulo)
                    .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cBoxCubiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGenerarReporte))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDescargarPDF)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed

        flujoPantallas.regresarAlMenuPrincipal(this);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnDescargarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescargarPDFActionPerformed
         descargarReporteComoPDF();
    }//GEN-LAST:event_btnDescargarPDFActionPerformed
    
    private void descargarReporteComoPDF() {
        CubiculoDTO cubiculo =  (CubiculoDTO) cBoxCubiculo.getSelectedItem();
        if (cubiculo != null) {
            try {
                ReporteIngresosCubiculoDTO dto = controlNegocio.generarReporteIngresosPorCubiculo(cubiculo);

                File pdfGenerado = DocumentoPDFUtil.generarPDFIngresosCubiculo(dto);

                // Abre el archivo PDF en el visor predeterminado del sistema
                if (Desktop.isDesktopSupported()) {
                    Desktop.getDesktop().open(pdfGenerado);
                } else {
                    JOptionPane.showMessageDialog(this, "El visor de escritorio no es compatible en este sistema.");
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al generar o abrir el PDF: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDescargarPDF;
    private javax.swing.JButton btnGenerarReporte;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<CubiculoDTO> cBoxCubiculo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables
}
